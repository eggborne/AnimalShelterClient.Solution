@{
    ViewData["Title"] = "Animal Shelter Client";
}

@using Newtonsoft.Json;

@using AnimalShelterClient.Models

@await Html.PartialAsync("PageLinkSpread")

<h1 class="page-header"><span>All Animals</span>
@if (User.Identity.IsAuthenticated) 
{
    @await Html.PartialAsync("CreateModal", new Animal())
    <button class="green" onclick="showModal('create-modal')">Add an Animal</button>
}
</h1>

@if (Model != null)
{
<ul id="home-animal-list" class="animal-list obscured">
    @foreach (Animal animal in Model)
    {
        <li class="animal-list-item @(animal.Species)-list-item">
            <div class="animal-id">id #@animal.AnimalId</div>

            <div class="icon @(animal.Species)-icon @animal.Gender.ToLower()">
                <div class="animal-species">@animal.Species</div>
            </div>
            <div class="animal-stat-list">
                <div class="animal-name">@animal.Name</div>
                <div class="animal-breed">@animal.Breed</div>
                <div class="animal-gender">@animal.Gender</div>
            </div>
            @if (User.Identity.IsAuthenticated) {
                <div class="button-area">    
                    @await Html.PartialAsync("EditModal", animal)
                    @await Html.PartialAsync("DeleteModal", animal) 

                    <button class="yellow" onclick="showModal('edit-modal-@animal.AnimalId')">Edit</button>
                    <button class="red" onclick="showModal('delete-modal-@animal.AnimalId')">Delete</button>
                </div>
            }
        </li>
    }
</ul>
}
else
{
    <p>No animals found</p>
}

@await Html.PartialAsync("PageLinkSpread")

<script>
window.addEventListener("load", () => {
    document.getElementById("home-animal-list").classList.remove('obscured');
});
</script>

